<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="8ad84b5b-fa82-490f-9eb8-a113ab692d15" name="Changes" comment="I created a pair class to store coordinates in a 2D array, and the floodFillStart() method initializes a 10x10 2D array with all elements set to 0. The display() method displays the contents of a 2d array. The buildWalls() method sets some coordinates -1 as the wall. This fill() method is used to fill the region starting from the given coordinates in the 2d array. The incremental value iteratively fills adjacent pixels until more pixels cannot be filled">
      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/CA3_Question3.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2cMj3rGVdVqZq21pc1vr3xVQtay" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "main",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "onboarding.tips.debug.path": "/Users/xhanhan/Library/CloudStorage/OneDrive-DundalkInstituteofTechnology/Year2 OO Programming/oop-ca3-Jianfeng-Han/src/main/java/org/example/Main.java",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager">
    <configuration name="CA3_Question1" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.CA3_Question1" />
      <module name="oop-ca3-Jianfeng-Han" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.CA3_Question1" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="8ad84b5b-fa82-490f-9eb8-a113ab692d15" name="Changes" comment="" />
      <created>1707928148026</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1707928148026</updated>
      <workItem from="1707928149060" duration="173000" />
      <workItem from="1707928333863" duration="3614000" />
    </task>
    <task id="LOCAL-00001" summary="Two stacks are created. Enter the number or negative number entered by the user. In the while loop, if the integer is greater than 0, it goes to the driveway stack. If it is less than 0, driveway.pop. I wrote a method called &quot;CarMoveToStreet&quot;. It can be realized that when the number is less than 0, the car will be popped out of the driveway stack, the corresponding number will be removed, and then the remaining cars will be returned from the streetway to the driveway stack.">
      <option name="closed" value="true" />
      <created>1707929495518</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1707929495518</updated>
    </task>
    <task id="LOCAL-00002" summary="Two stacks are created. Enter the number or negative number entered by the user. In the while loop, if the integer is greater than 0, it goes to the driveway stack. If it is less than 0, driveway.pop. I wrote a method called &quot;CarMoveToStreet&quot;. It can be realized that when the number is less than 0, the car will be popped out of the driveway stack, the corresponding number will be removed, and then the remaining cars will be returned from the streetway to the driveway stack.">
      <option name="closed" value="true" />
      <created>1707929657006</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1707929657006</updated>
    </task>
    <task id="LOCAL-00003" summary="I created a pair class to store coordinates in a 2D array, and the floodFillStart() method initializes a 10x10 2D array with all elements set to 0. The display() method displays the contents of a 2d array. The buildWalls() method sets some coordinates -1 as the wall. This fill() method is used to fill the region starting from the given coordinates in the 2d array. The incremental value iteratively fills adjacent pixels until more pixels cannot be filled">
      <option name="closed" value="true" />
      <created>1707931475877</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1707931475877</updated>
    </task>
    <option name="localTasksCounter" value="4" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Two stacks are created. Enter the number or negative number entered by the user. In the while loop, if the integer is greater than 0, it goes to the driveway stack. If it is less than 0, driveway.pop. I wrote a method called &quot;CarMoveToStreet&quot;. It can be realized that when the number is less than 0, the car will be popped out of the driveway stack, the corresponding number will be removed, and then the remaining cars will be returned from the streetway to the driveway stack." />
    <MESSAGE value="I created a pair class to store coordinates in a 2D array, and the floodFillStart() method initializes a 10x10 2D array with all elements set to 0. The display() method displays the contents of a 2d array. The buildWalls() method sets some coordinates -1 as the wall. This fill() method is used to fill the region starting from the given coordinates in the 2d array. The incremental value iteratively fills adjacent pixels until more pixels cannot be filled" />
    <option name="LAST_COMMIT_MESSAGE" value="I created a pair class to store coordinates in a 2D array, and the floodFillStart() method initializes a 10x10 2D array with all elements set to 0. The display() method displays the contents of a 2d array. The buildWalls() method sets some coordinates -1 as the wall. This fill() method is used to fill the region starting from the given coordinates in the 2d array. The incremental value iteratively fills adjacent pixels until more pixels cannot be filled" />
  </component>
</project>