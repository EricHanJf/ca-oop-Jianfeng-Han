<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="8ad84b5b-fa82-490f-9eb8-a113ab692d15" name="Changes" comment="I created two queues, TakeOff and. Landing LinkedList&#10;&#10;Firstly, there is a loop that repeatedly prompts the user to input instructions.&#10;&#10;Based on the input instruction, it calls the corresponding methods: takeoff(), landing(), Next(), or exits the program.&#10;&#10;The takeoff() method adds the flight name to the queue for TakeOff. The landing() method also adds the flight name to the queue. The Next() method is to check if there are any planes waiting to land (Landing queue). If there is, it will delete the first aircraft from the queue and print the information. If there is no aircraft to land in the landing queue, the aircraft in the takeoff queue will be checked, and the first aircraft will be removed from the queue and printed as takeoff. If there are no planes in both queues, it will print that there are no planes in both queues.">
      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/CA3_Question6.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2cMj3rGVdVqZq21pc1vr3xVQtay" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "/Users/xhanhan/Library/CloudStorage/OneDrive-DundalkInstituteofTechnology/Year2 OO Programming/oop-ca3-Jianfeng-Han/src",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "onboarding.tips.debug.path": "/Users/xhanhan/Library/CloudStorage/OneDrive-DundalkInstituteofTechnology/Year2 OO Programming/oop-ca3-Jianfeng-Han/src/main/java/org/example/Main.java",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src" />
      <recent name="$PROJECT_DIR$/src/main/java" />
    </key>
  </component>
  <component name="RunManager" selected="Application.CA3_Question4">
    <configuration name="CA3_Question1" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.CA3_Question1" />
      <module name="oop-ca3-Jianfeng-Han" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CA3_Question4" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="org.example.CA3_Question4" />
      <module name="oop-ca3-Jianfeng-Han" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="org.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.CA3_Question4" />
        <item itemvalue="Application.CA3_Question1" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="8ad84b5b-fa82-490f-9eb8-a113ab692d15" name="Changes" comment="" />
      <created>1707928148026</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1707928148026</updated>
      <workItem from="1707928149060" duration="173000" />
      <workItem from="1707928333863" duration="8164000" />
    </task>
    <task id="LOCAL-00001" summary="Two stacks are created. Enter the number or negative number entered by the user. In the while loop, if the integer is greater than 0, it goes to the driveway stack. If it is less than 0, driveway.pop. I wrote a method called &quot;CarMoveToStreet&quot;. It can be realized that when the number is less than 0, the car will be popped out of the driveway stack, the corresponding number will be removed, and then the remaining cars will be returned from the streetway to the driveway stack.">
      <option name="closed" value="true" />
      <created>1707929495518</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1707929495518</updated>
    </task>
    <task id="LOCAL-00002" summary="Two stacks are created. Enter the number or negative number entered by the user. In the while loop, if the integer is greater than 0, it goes to the driveway stack. If it is less than 0, driveway.pop. I wrote a method called &quot;CarMoveToStreet&quot;. It can be realized that when the number is less than 0, the car will be popped out of the driveway stack, the corresponding number will be removed, and then the remaining cars will be returned from the streetway to the driveway stack.">
      <option name="closed" value="true" />
      <created>1707929657006</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1707929657006</updated>
    </task>
    <task id="LOCAL-00003" summary="I created a pair class to store coordinates in a 2D array, and the floodFillStart() method initializes a 10x10 2D array with all elements set to 0. The display() method displays the contents of a 2d array. The buildWalls() method sets some coordinates -1 as the wall. This fill() method is used to fill the region starting from the given coordinates in the 2d array. The incremental value iteratively fills adjacent pixels until more pixels cannot be filled">
      <option name="closed" value="true" />
      <created>1707931475877</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1707931475877</updated>
    </task>
    <task id="LOCAL-00004" summary="The method readFile() reads the specified file &quot;fileName&quot;, in. useDelimiter (&quot;[^ A-Za-z0-9_]+&quot;); It is a regular expression used to find symbols and words that match this expression. Created a TreeMap named identifierMap, where keys are tokens (identifiers) and values are sets of line numbers where each token appears. Then, a while loop is used to find the identifier. If it meets the requirements of the expression, it is stored as a key in Map&lt;String&gt;, and each line is stored in set&lt;Integer&gt;. Use enhanced for to traverse the content in the Map and print it out">
      <option name="closed" value="true" />
      <created>1707932500892</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1707932500892</updated>
    </task>
    <task id="LOCAL-00005" summary="Created an ArrayDeque call stack to track open tags encountered in files. Each tag should be compared to the last start tag encountered in the file. Ensure proper nesting. If all tags are nested correctly, this method returns true; Otherwise, return false.(If could not run, please try to run code i uploaded on moodle).">
      <option name="closed" value="true" />
      <created>1707934180799</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1707934180799</updated>
    </task>
    <task id="LOCAL-00006" summary="I created two queues, TakeOff and. Landing LinkedList&#10;&#10;Firstly, there is a loop that repeatedly prompts the user to input instructions.&#10;&#10;Based on the input instruction, it calls the corresponding methods: takeoff(), landing(), Next(), or exits the program.&#10;&#10;The takeoff() method adds the flight name to the queue for TakeOff. The landing() method also adds the flight name to the queue. The Next() method is to check if there are any planes waiting to land (Landing queue). If there is, it will delete the first aircraft from the queue and print the information. If there is no aircraft to land in the landing queue, the aircraft in the takeoff queue will be checked, and the first aircraft will be removed from the queue and printed as takeoff. If there are no planes in both queues, it will print that there are no planes in both queues.">
      <option name="closed" value="true" />
      <created>1707935863558</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1707935863558</updated>
    </task>
    <option name="localTasksCounter" value="7" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Two stacks are created. Enter the number or negative number entered by the user. In the while loop, if the integer is greater than 0, it goes to the driveway stack. If it is less than 0, driveway.pop. I wrote a method called &quot;CarMoveToStreet&quot;. It can be realized that when the number is less than 0, the car will be popped out of the driveway stack, the corresponding number will be removed, and then the remaining cars will be returned from the streetway to the driveway stack." />
    <MESSAGE value="I created a pair class to store coordinates in a 2D array, and the floodFillStart() method initializes a 10x10 2D array with all elements set to 0. The display() method displays the contents of a 2d array. The buildWalls() method sets some coordinates -1 as the wall. This fill() method is used to fill the region starting from the given coordinates in the 2d array. The incremental value iteratively fills adjacent pixels until more pixels cannot be filled" />
    <MESSAGE value="The method readFile() reads the specified file &quot;fileName&quot;, in. useDelimiter (&quot;[^ A-Za-z0-9_]+&quot;); It is a regular expression used to find symbols and words that match this expression. Created a TreeMap named identifierMap, where keys are tokens (identifiers) and values are sets of line numbers where each token appears. Then, a while loop is used to find the identifier. If it meets the requirements of the expression, it is stored as a key in Map&lt;String&gt;, and each line is stored in set&lt;Integer&gt;. Use enhanced for to traverse the content in the Map and print it out" />
    <MESSAGE value="Created an ArrayDeque call stack to track open tags encountered in files. Each tag should be compared to the last start tag encountered in the file. Ensure proper nesting. If all tags are nested correctly, this method returns true; Otherwise, return false.(If could not run, please try to run code i uploaded on moodle)." />
    <MESSAGE value="I created two queues, TakeOff and. Landing LinkedList&#10;&#10;Firstly, there is a loop that repeatedly prompts the user to input instructions.&#10;&#10;Based on the input instruction, it calls the corresponding methods: takeoff(), landing(), Next(), or exits the program.&#10;&#10;The takeoff() method adds the flight name to the queue for TakeOff. The landing() method also adds the flight name to the queue. The Next() method is to check if there are any planes waiting to land (Landing queue). If there is, it will delete the first aircraft from the queue and print the information. If there is no aircraft to land in the landing queue, the aircraft in the takeoff queue will be checked, and the first aircraft will be removed from the queue and printed as takeoff. If there are no planes in both queues, it will print that there are no planes in both queues." />
    <option name="LAST_COMMIT_MESSAGE" value="I created two queues, TakeOff and. Landing LinkedList&#10;&#10;Firstly, there is a loop that repeatedly prompts the user to input instructions.&#10;&#10;Based on the input instruction, it calls the corresponding methods: takeoff(), landing(), Next(), or exits the program.&#10;&#10;The takeoff() method adds the flight name to the queue for TakeOff. The landing() method also adds the flight name to the queue. The Next() method is to check if there are any planes waiting to land (Landing queue). If there is, it will delete the first aircraft from the queue and print the information. If there is no aircraft to land in the landing queue, the aircraft in the takeoff queue will be checked, and the first aircraft will be removed from the queue and printed as takeoff. If there are no planes in both queues, it will print that there are no planes in both queues." />
  </component>
</project>